{"ast":null,"code":"var _jsxFileName = \"/workspace/test_server/web/myapp/src/client/AppTest.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport axios from 'axios';\n\nclass AppTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      userEmail: \"\",\n      userPassword: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addData = this.addData.bind(this);\n  }\n\n  addData() {\n    const url = '/api';\n    /* // multi-part data 를 전송할 때 사용한다.\n    const sendData = new FormData();\n    sendData.append('name' , this.state.userName);\n    sendData.append('email' , this.state.userEmail);\n    */\n\n    const sendData = {\n      name: this.state.userName,\n      email: this.state.userEmail,\n      password: this.state.userPassword\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    return axios.post(url, sendData, config);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.addData().then(function (response) {\n      console.log(response.data);\n    }, function (reject) {\n      console.log(reject.data);\n    });\n    return false;\n  }\n\n  handleValueChange(e) {\n    let changeValue = {};\n    changeValue[e.target.name] = e.target.value;\n    this.setState(changeValue);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, \"test http \"), \"\\uC774\\uB984: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"userName\",\n      value: this.state.name,\n      onChange: this.handleValueChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 118\n      }\n    }), \"\\uC774\\uBA54\\uC77C : \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"userEmail\",\n      value: this.state.email,\n      onChange: this.handleValueChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 122\n      }\n    }), \"\\uBE44\\uBC00\\uBC88\\uD638 : \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"userPassword\",\n      value: this.state.password,\n      onChange: this.handleValueChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 129\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, \"submit\"));\n  }\n\n}\n\nexport default AppTest;","map":{"version":3,"sources":["/workspace/test_server/web/myapp/src/client/AppTest.js"],"names":["React","Component","axios","AppTest","constructor","props","state","userName","userEmail","userPassword","handleSubmit","bind","addData","url","sendData","name","email","password","config","headers","post","e","preventDefault","then","response","console","log","data","reject","handleValueChange","changeValue","target","value","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport  axios from 'axios';\n\nclass AppTest extends React.Component {\n\tstate = {\n\t\tuserName : \"\" ,\n\t\tuserEmail : \"\" ,\n\t\tuserPassword : \"\"\n\t}\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.addData = this.addData.bind(this);\n\t\t\n\t}\n\n\n\taddData(){\n\t\tconst url = '/api';\n\t\t/* // multi-part data 를 전송할 때 사용한다.\n\t\tconst sendData = new FormData();\n\t\tsendData.append('name' , this.state.userName);\n\t\tsendData.append('email' , this.state.userEmail);\n\t\t*/\n\t\tconst sendData = {\n\t\t\tname : this.state.userName ,\n\t\t\temail : this.state.userEmail , \n\t\t\tpassword : this.state.userPassword\n\t\t}\n\t\t\n\t\tconst config = {\n\t\t\theaders: {\n\t\n\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn axios.post(url , sendData ,config);\n\t\t\n\t\t\n\t\t\n\t}\n\n\thandleSubmit(e){\n\t\te.preventDefault();\n\t\tthis.addData()\n\t\t.then(function(response){\n\t\t\t console.log(response.data);\n\t\t} , function(reject){\n\t\t\t console.log(reject.data);\n\t\t})\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\n\n\thandleValueChange(e){\n\t\tlet changeValue = {};\n\t\tchangeValue[e.target.name] = e.target.value;\n\t\tthis.setState(changeValue);\n\t\t\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\t<form onSubmit = {this.handleSubmit}>\n\t\t\t\t<h1>test http </h1>\n\t\t\t\t이름: <input type=\"text\" name=\"userName\" value ={this.state.name} onChange = {this.handleValueChange.bind(this)} /><br/>\n\t\t\t\t이메일 : <input type='text' name=\"userEmail\" value = {this.state.email} onChange = {this.handleValueChange.bind(this)}/><br/>\n\t\t\t\t비밀번호 : <input type='text' name=\"userPassword\" value = {this.state.password} onChange = {this.handleValueChange.bind(this)}/><br/>\n\t\t\t\t<button type = 'submit'>submit</button>\n\n\t\t\t\t\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AppTest;"]},"metadata":{},"sourceType":"module"}